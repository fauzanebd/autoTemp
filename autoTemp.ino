#include "fuzzy_logic.h"
#include "peopleCounter.h"
#include "sendToEsp.h"
#include <IRLibSendBase.h>    //We need the base code
#include <IRLib_HashRaw.h>    //Only use raw sender
#include <DHT.h>
#include <Arduino.h>

IRsendRaw mySender;

//#include <SoftwareSerial.h>

//DHT related pin
#define dht_apin A0 // Analog Pin sensor is connected to    // Digital pin connected to the DHT sensor
#define DHTTYPE DHT22   // DHT 22  (AM2302), AM2321


#define RAW_DATA_LEN 140
#define RAW_DATA_LIST_LEN 17
DHT dht(dht_apin, DHTTYPE);

//laser related pin
int in_laser = 10;
int out_laser = 11;

//IR related pin

//ESP Connn related pin
//int rx_esp = 2;
//int tx_esp = 3;
//SoftwareSerial NanoSerial(rx_esp, tx_esp); // RX | TX

const uint16_t rawDataList[RAW_DATA_LIST_LEN][RAW_DATA_LEN] PROGMEM= {
//rawDataOn
{9026, 4494, 582, 1702, 594, 602, 610, 586, 
 614, 1670, 610, 586, 614, 582, 614, 586, 
 610, 586, 614, 582, 618, 578, 614, 586, 
 614, 582, 614, 582, 614, 582, 614, 586, 
 614, 582, 614, 582, 618, 578, 618, 582, 
 614, 582, 614, 582, 614, 1670, 614, 582, 
 618, 582, 614, 582, 642, 582, 614, 582, 
 614, 586, 610, 1646, 638, 586, 610, 1646, 
 638, 590, 610, 586, 610, 1646, 638, 586, 
 610, 19910, 606, 1654, 630, 1654, 630, 594, 
 602, 594, 606, 566, 630, 566, 630, 566, 
 630, 570, 630, 566, 626, 570, 630, 566, 
 630, 566, 610, 590, 630, 1654, 630, 566, 
 618, 578, 634, 566, 630, 566, 630, 566, 
 630, 570, 630, 566, 630, 566, 630, 566, 
 614, 586, 602, 594, 602, 594, 602, 598, 
 598, 598, 602, 1682, 602, 598, 594, 1690, 
 598, 598, 598, 1000},
 //rawDataOff
{9030, 4486, 590, 1694, 618, 578, 590, 606, 
 590, 606, 614, 586, 614, 582, 618, 578, 
 614, 582, 618, 578, 618, 578, 618, 582, 
 590, 606, 614, 582, 618, 578, 618, 578, 
 598, 602, 614, 582, 594, 602, 642, 558, 
 614, 582, 614, 582, 618, 1666, 618, 578, 
 618, 578, 618, 582, 614, 582, 618, 578, 
 618, 578, 618, 1670, 614, 578, 622, 1666, 
 614, 582, 618, 578, 618, 1670, 614, 582, 
 614, 19934, 586, 1674, 614, 1670, 614, 582, 
 614, 582, 614, 582, 622, 578, 634, 562, 
 634, 562, 638, 586, 610, 586, 610, 586, 
 610, 590, 606, 590, 610, 1646, 634, 590, 
 610, 586, 610, 590, 606, 590, 606, 590, 
 606, 590, 606, 594, 602, 594, 606, 590, 
 606, 590, 606, 594, 602, 594, 602, 566, 
 630, 570, 626, 1658, 630, 566, 630, 1654, 
 630, 1654, 630, 1000},
//16
{ 8994, 4510, 618, 1670, 610, 582, 618, 578, 
 618, 1666, 618, 578, 618, 578, 618, 578, 
 618, 578, 618, 582, 614, 578, 618, 578, 
 618, 578, 618, 578, 618, 578, 618, 582, 
 618, 578, 614, 582, 614, 582, 614, 582, 
 618, 578, 614, 582, 614, 1670, 614, 582, 
 614, 582, 614, 582, 614, 582, 614, 582, 
 614, 586, 634, 1646, 638, 562, 634, 1646, 
 638, 586, 610, 586, 610, 1646, 638, 586, 
 610, 19906, 606, 1650, 634, 1650, 634, 590, 
 606, 590, 606, 590, 606, 590, 606, 590, 
 602, 594, 606, 566, 626, 570, 626, 570, 
 626, 570, 630, 566, 630, 1650, 634, 566, 
 630, 562, 634, 562, 606, 590, 630, 566, 
 610, 590, 630, 562, 634, 566, 602, 594, 
 630, 566, 630, 566, 630, 566, 630, 566, 
 606, 590, 606, 1678, 630, 566, 602, 1682, 
 602, 594, 602, 1000},
//17
{ 8986, 4522, 582, 1702, 582, 614, 582, 614, 
 582, 1706, 578, 614, 582, 618, 578, 618, 
 578, 618, 582, 1702, 582, 614, 586, 610, 
 582, 614, 582, 614, 582, 614, 582, 614, 
 582, 618, 582, 614, 582, 610, 586, 610, 
 586, 614, 582, 614, 582, 1702, 582, 614, 
 606, 590, 610, 586, 582, 614, 610, 586, 
 610, 586, 610, 1674, 610, 590, 606, 1674, 
 606, 590, 586, 614, 606, 1678, 606, 590, 
 582, 19962, 582, 1678, 606, 1678, 610, 586, 
 610, 586, 610, 586, 614, 582, 614, 582, 
 614, 582, 614, 582, 614, 582, 614, 586, 
 614, 582, 614, 582, 614, 1670, 614, 582, 
 614, 610, 614, 582, 614, 586, 610, 582, 
 618, 582, 614, 582, 614, 582, 614, 582, 
 614, 582, 614, 582, 614, 582, 614, 586, 
 610, 586, 610, 586, 610, 1646, 638, 1646, 
 638, 586, 610, 1000},
//18
{ 9038, 4498, 602, 1686, 602, 594, 574, 622, 
 602, 1682, 578, 618, 578, 618, 602, 598, 
 602, 594, 578, 618, 602, 1682, 578, 618, 
 606, 594, 578, 618, 578, 618, 578, 618, 
 578, 618, 606, 594, 578, 618, 602, 594, 
 578, 618, 578, 622, 602, 1682, 578, 618, 
 578, 618, 578, 622, 574, 622, 578, 618, 
 602, 598, 574, 1710, 574, 618, 578, 1710, 
 578, 618, 578, 618, 578, 1706, 578, 622, 
 578, 19966, 550, 1706, 578, 1706, 578, 622, 
 574, 622, 578, 618, 578, 618, 578, 618, 
 582, 618, 582, 642, 582, 614, 582, 614, 
 586, 610, 610, 590, 610, 1642, 646, 582, 
 614, 582, 614, 582, 614, 582, 618, 582, 
 614, 582, 614, 582, 618, 578, 614, 586, 
 614, 582, 614, 582, 614, 582, 614, 562, 
 634, 558, 638, 1646, 638, 1646, 638, 1646, 
 638, 558, 614, 1000},
//19
{ 9010, 4502, 602, 1682, 582, 614, 602, 594, 
 602, 1682, 582, 614, 606, 594, 578, 618, 
 578, 618, 578, 1706, 602, 1682, 602, 594, 
 578, 618, 578, 622, 602, 590, 578, 622, 
 578, 618, 578, 618, 578, 618, 578, 622, 
 578, 618, 578, 618, 578, 1706, 578, 618, 
 578, 618, 578, 622, 578, 618, 578, 618, 
 578, 618, 582, 1702, 582, 622, 602, 1678, 
 610, 614, 586, 610, 614, 1642, 642, 586, 
 614, 19902, 618, 1642, 642, 1642, 642, 582, 
 614, 586, 614, 582, 614, 582, 614, 582, 
 614, 582, 614, 582, 614, 586, 614, 558, 
 634, 558, 642, 558, 638, 1646, 614, 582, 
 614, 582, 614, 582, 610, 590, 610, 586, 
 610, 586, 634, 562, 610, 586, 634, 566, 
 606, 590, 606, 590, 606, 594, 602, 594, 
 602, 594, 602, 594, 602, 594, 602, 598, 
 598, 1686, 598, 1000},
//20
{ 9014, 4502, 602, 1682, 602, 594, 602, 594, 
 602, 1682, 602, 594, 606, 590, 606, 594, 
 602, 594, 602, 594, 606, 590, 606, 1678, 
 606, 590, 606, 594, 602, 594, 602, 594, 
 602, 594, 602, 598, 602, 594, 602, 594, 
 602, 594, 602, 594, 606, 1682, 602, 594, 
 602, 594, 606, 590, 606, 594, 602, 594, 
 602, 594, 606, 1682, 602, 594, 602, 1682, 
 602, 594, 602, 594, 606, 1678, 606, 594, 
 602, 19946, 574, 1686, 602, 1682, 602, 594, 
 602, 594, 602, 594, 602, 594, 602, 598, 
 602, 594, 602, 594, 602, 594, 602, 598, 
 574, 646, 550, 646, 550, 1710, 574, 650, 
 526, 670, 550, 646, 550, 646, 554, 646, 
 578, 618, 582, 614, 610, 586, 610, 586, 
 614, 586, 610, 586, 614, 582, 614, 582, 
 614, 582, 614, 1646, 638, 558, 634, 562, 
 634, 1650, 614, 1000},
//21
{ 9014, 4498, 602, 1686, 602, 590, 602, 594, 
 606, 1678, 606, 590, 606, 590, 606, 594, 
 602, 594, 602, 1682, 602, 594, 602, 1682, 
 602, 594, 602, 594, 602, 594, 602, 594, 
 602, 594, 606, 590, 606, 594, 602, 590, 
 606, 594, 602, 594, 602, 1682, 602, 594, 
 602, 594, 602, 594, 602, 594, 606, 590, 
 606, 590, 606, 1682, 602, 594, 602, 1682, 
 602, 594, 602, 594, 602, 1682, 602, 594, 
 602, 19942, 574, 1686, 602, 1682, 578, 618, 
 602, 594, 602, 594, 602, 598, 574, 646, 
 550, 646, 550, 646, 550, 646, 550, 650, 
 526, 670, 526, 670, 550, 1706, 606, 618, 
 582, 618, 606, 590, 610, 586, 610, 586, 
 614, 582, 614, 582, 614, 586, 610, 586, 
 610, 586, 610, 586, 610, 562, 610, 586, 
 610, 586, 610, 586, 610, 1674, 610, 586, 
 610, 1674, 610, 1000},
//22
{ 9014, 4502, 602, 1682, 602, 594, 602, 594, 
 602, 1682, 602, 594, 602, 594, 606, 590, 
 606, 590, 606, 594, 602, 1682, 602, 1682, 
 602, 594, 602, 594, 602, 594, 602, 598, 
 602, 590, 606, 594, 602, 594, 602, 594, 
 606, 590, 602, 594, 606, 1682, 602, 590, 
 606, 590, 606, 594, 602, 594, 602, 594, 
 606, 594, 602, 1682, 598, 598, 602, 1682, 
 602, 594, 602, 594, 602, 1682, 602, 598, 
 574, 19974, 546, 1710, 574, 1714, 570, 650, 
 550, 650, 546, 650, 574, 622, 582, 614, 
 606, 590, 586, 614, 610, 586, 610, 586, 
 610, 586, 614, 586, 610, 1646, 638, 586, 
 610, 562, 634, 562, 610, 586, 610, 586, 
 610, 586, 610, 586, 610, 590, 606, 590, 
 606, 590, 610, 586, 606, 594, 606, 590, 
 602, 594, 606, 1678, 606, 1678, 606, 594, 
 598, 1686, 602, 1000},
//23
{ 9014, 4498, 606, 1678, 602, 598, 598, 594, 
 602, 1686, 602, 590, 602, 598, 602, 590, 
 606, 590, 610, 1678, 602, 1682, 602, 1682, 
 602, 594, 602, 594, 602, 594, 602, 594, 
 602, 594, 602, 594, 582, 618, 602, 594, 
 574, 626, 570, 646, 550, 1710, 574, 646, 
 550, 650, 546, 650, 526, 670, 554, 642, 
 578, 618, 582, 1678, 610, 614, 606, 1650, 
 638, 586, 610, 586, 610, 1646, 642, 582, 
 610, 19910, 610, 1650, 638, 1646, 610, 586, 
 610, 586, 610, 590, 606, 590, 606, 590, 
 606, 590, 606, 590, 606, 590, 606, 594, 
 602, 590, 606, 594, 602, 1682, 602, 594, 
 602, 594, 602, 598, 598, 598, 598, 598, 
 598, 598, 598, 598, 598, 598, 598, 602, 
 594, 602, 594, 602, 594, 602, 594, 606, 
 590, 606, 590, 606, 594, 602, 594, 1690, 
 566, 1722, 586, 1000},
//24
{ 9014, 4502, 602, 1682, 602, 590, 606, 594, 
 602, 1678, 606, 594, 602, 594, 602, 594, 
 602, 594, 602, 594, 606, 590, 602, 594, 
 602, 1686, 602, 590, 606, 590, 606, 594, 
 602, 594, 602, 594, 602, 594, 602, 594, 
 606, 590, 606, 590, 606, 1682, 602, 594, 
 602, 594, 602, 594, 602, 594, 606, 590, 
 602, 594, 606, 1678, 602, 594, 606, 1682, 
 602, 590, 606, 594, 602, 1678, 602, 598, 
 602, 19942, 574, 1686, 602, 1682, 602, 594, 
 602, 594, 602, 594, 602, 594, 602, 594, 
 602, 594, 602, 594, 602, 594, 602, 598, 
 574, 646, 546, 650, 546, 1710, 574, 650, 
 550, 646, 550, 650, 574, 618, 582, 618, 
 578, 618, 606, 590, 610, 586, 610, 586, 
 610, 586, 610, 586, 610, 586, 614, 582, 
 614, 582, 610, 1646, 638, 562, 610, 1670, 
 614, 1670, 614, 1000},
//25
{ 9006, 4498, 602, 1682, 602, 594, 602, 594, 
 602, 1682, 602, 594, 602, 594, 602, 594, 
 602, 594, 602, 1682, 602, 594, 602, 594, 
 602, 1682, 598, 598, 602, 590, 602, 598, 
 602, 590, 602, 598, 602, 590, 602, 598, 
 602, 590, 602, 594, 606, 1682, 602, 594, 
 574, 622, 594, 626, 546, 650, 546, 650, 
 546, 650, 546, 1710, 574, 650, 550, 1706, 
 582, 642, 578, 618, 582, 1674, 634, 590, 
 610, 19910, 610, 1646, 642, 1642, 638, 586, 
 610, 562, 610, 586, 610, 586, 606, 586, 
 610, 586, 610, 586, 610, 586, 606, 590, 
 606, 590, 606, 590, 606, 1678, 602, 594, 
 602, 594, 602, 594, 602, 594, 602, 594, 
 602, 594, 598, 598, 598, 598, 594, 602, 
 598, 598, 598, 598, 594, 602, 594, 602, 
 594, 602, 594, 602, 594, 1690, 594, 1690, 
 590, 1694, 590, 1000}

};

//other variables
int roomTemp = 0;
int acTemp = 0;


void setup() {
    //laser setup
    pinMode(in_laser, INPUT);
    pinMode(out_laser, INPUT);

    //ESP Conn setup
//    pinMode(rx_esp,INPUT);
//    pinMode(tx_esp,OUTPUT);
//    NanoSerial.begin(57600);


    Serial.begin(9600);
}

void loop() {
    roomTemp = detectTemp();
    int occupancy = loopCounter(in_laser, out_laser);
    acTemp = getTemperature(roomTemp, occupancy);
    transmitTemp(acTemp, occupancy);
    delay(1000);
}

//use DHT sensor to detect room temp
int detectTemp() {
 int temp = dht.readTemperature();
 return temp;
};

//use IR sensor to transmit command to AC unit
void transmitTemp(int acTemp, int counter){
   if (counter >0){
       mySender.send(rawDataList[0],RAW_DATA_LEN,36);
   }
   else if (counter = 0){
       mySender.send(rawDataList[1],RAW_DATA_LEN,36);
   }
   else {    
   int tempDiff = acTemp-14;
   mySender.send(rawDataList[tempDiff],RAW_DATA_LEN,36);
   }
};
